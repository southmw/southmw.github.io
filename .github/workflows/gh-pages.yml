name: Deploy GitHub Pages

on:
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore GithubIO/GithubIO.csproj
      - name: Build
        run: dotnet build GithubIO/GithubIO.csproj --configuration Release --no-restore
      - name: Publish
        run: dotnet publish GithubIO/GithubIO.csproj --configuration Release --no-build --output ./publish
      - name: Prepare wwwroot
        id: prepare
        run: |
          cp -r ./publish/wwwroot ./wwwroot
          touch ./wwwroot/.nojekyll
          echo "wwwroot-path=./wwwroot" >> $GITHUB_OUTPUT
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ${{ steps.prepare.outputs.wwwroot-path }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
