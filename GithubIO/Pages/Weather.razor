@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p class="text-muted">This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < 6; i++)
                {
                    <tr class="skeleton-row">
                        <td><span class="skeleton-box" style="max-width: 120px"></span></td>
                        <td><span class="skeleton-box" style="max-width: 80px"></span></td>
                        <td><span class="skeleton-box" style="max-width: 80px"></span></td>
                        <td><span class="skeleton-box" style="max-width: 200px"></span></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="table-responsive">
    <table class="table align-middle">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td><span class="text-nowrap">@forecast.Date.ToShortDateString()</span></td>
                    <td><span class="badge text-bg-primary bg-primary">@forecast.TemperatureC</span></td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    </div>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
